# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataSet
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataSet
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataSet
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different DataSet implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://kedro.readthedocs.io/en/stable/data/data_catalog.html

seismic_catalog_data:
  type: pandas.CSVDataSet
  filepath: gs://us-geomechanicsforco2-landing/data_sources/cushing_oklahoma/dacaturSeismic.csv #test.csv
  fs_args:
    project: us-geomechanicsforco2
  #credentials: gcp_credentials
  # more about layers in the Data Engineering Convention:
  # https://kedro.readthedocs.io/en/stable/tutorial/visualise_pipeline.html#interact-with-data-engineering-convention
  layer: raw

seismic_catalog:
  type: pickle.PickleDataSet
  filepath: gs://us-geomechanicsforco2-dev-staging/data_sources/cushing_oklahoma/seismic_catalog.pickle #test.csv
  fs_args:
    project: us-geomechanicsforco2
  #credentials: gcp_credentials
  # more about layers in the Data Engineering Convention:
  # https://kedro.readthedocs.io/en/stable/tutorial/visualise_pipeline.html#interact-with-data-engineering-convention
  layer: raw

pressure_table_data:
  type: pandas.CSVDataSet
  filepath: gs://us-geomechanicsforco2-landing/data_sources/cushing_oklahoma/decaturInjection.csv #test.csv
  fs_args:
    project: us-geomechanicsforco2
  #credentials: gcp_credentials
  # more about layers in the Data Engineering Convention:
  # https://kedro.readthedocs.io/en/stable/tutorial/visualise_pipeline.html#interact-with-data-engineering-convention
  layer: raw

pressure_table:
  type: pickle.PickleDataSet
  filepath: gs://us-geomechanicsforco2-dev-staging/data_sources/cushing_oklahoma/pressure_table.pickle #test.csv
  fs_args:
    project: us-geomechanicsforco2
  #credentials: gcp_credentials
  # more about layers in the Data Engineering Convention:
  # https://kedro.readthedocs.io/en/stable/tutorial/visualise_pipeline.html#interact-with-data-engineering-convention
  layer: raw

forecast_crs:
  type: pandas.CSVDataSet
  filepath: gs://us-geomechanicsforco2-dev-models/data_sources/cushing_oklahoma/forecast_crs.csv #test.csv
  fs_args:
    project: us-geomechanicsforco2
  #credentials: gcp_credentials
  # more about layers in the Data Engineering Convention:
  # https://kedro.readthedocs.io/en/stable/tutorial/visualise_pipeline.html#interact-with-data-engineering-convention
  layer: raw

test_csv:
  type: pandas.CSVDataSet
  filepath: gs://us-geomechanicsforco2-landing/data_sources/cushing_oklahoma/test.csv #test.csv
  fs_args:
    project: us-geomechanicsforco2
  #credentials: gcp_credentials
  # more about layers in the Data Engineering Convention:
  # https://kedro.readthedocs.io/en/stable/tutorial/visualise_pipeline.html#interact-with-data-engineering-convention
  layer: raw

test_csv_1:
  type: pandas.CSVDataSet
  filepath: data/01_raw/test.csv #test.csv
  # more about layers in the Data Engineering Convention:
  # https://kedro.readthedocs.io/en/stable/tutorial/visualise_pipeline.html#interact-with-data-engineering-convention
  layer: raw